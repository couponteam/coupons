<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.masou.coupon.data.mappers.CityMapper">
  <resultMap id="BaseResultMap" type="com.masou.coupon.data.models.City">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="zip_code" jdbcType="CHAR" property="zipCode" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <!--<collection property="province" ofType="com.masou.coupon.data.models.Province">-->
      <!--<id column="id" jdbcType="INTEGER" property="id" />-->
      <!--<result column="province_name" jdbcType="VARCHAR" property="provinceName" />-->
      <!--<result column="status" jdbcType="TINYINT" property="status" />-->
    <!--</collection>-->
  </resultMap>
  <sql id="Base_Column_List">
    id, city_name, province_id, zip_code, status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dic_cities
    where id = #{id,jdbcType=INTEGER} AND `status`=1 ORDER BY id
  </select>
  <select id="selectByProvinceKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dic_cities
    where province_id = #{provinceId,jdbcType=INTEGER} AND `status`=1 ORDER BY id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dic_cities
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.masou.coupon.data.models.City">
    insert into dic_cities (id, city_name, province_id, 
      zip_code, status, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{cityName,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER}, 
      #{zipCode,jdbcType=CHAR}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.masou.coupon.data.models.City">
    insert into dic_cities
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.masou.coupon.data.models.City">
    update dic_cities
    <set>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.masou.coupon.data.models.City">
    update dic_cities
    set city_name = #{cityName,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      zip_code = #{zipCode,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>